version: '3.8'

services:
  # supporting services
  db:
    image: mysql:8.0
    cap_add:
      - SYS_NICE
    restart: always
    environment:
      - MYSQL_DATABASE=poc
      - MYSQL_ROOT_PASSWORD=root
    ports:
      - '3307:3306'
    volumes:
      - db:/var/lib/mysql
      - ./db/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - poc-network
  
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - poc-network

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - poc-network
      
  # main services
  product:
    build:
      context: ./product-msvc/
    image: productmsvc
    environment:
      SPRING_KAFKA_BOOTSTRAPSERVERS: kafka:29092
    ports:
      - 8081:8080
    depends_on:
      - db
      - kafka
    #restart: on-failure
    networks:
      - poc-network
      
  activity-logger:
    build:
      context: ./activity-logger/
    image: activity-logger
    environment:
      SPRING_KAFKA_BOOTSTRAPSERVERS: kafka:29092
    depends_on:
      - kafka
      - product
    #restart: on-failure
    networks:
      - poc-network

networks:
  poc-network:
    driver: bridge
    
volumes:
  db:
    driver: local
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local